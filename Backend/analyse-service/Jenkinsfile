pipeline {
    agent any
    tools {
        maven 'Maven-4.0.0'
        jdk 'JDK17'
       // nodejs 'NodeJS'
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the main branch
                git branch: 'main', url: 'https://github.com/LaboratoryProject/Laboratory_Project.git'
            }
        }

        stage('Build') {
            steps {
                // Navigate to the service folder and build the Spring Boot app
                dir('Backend/analyse-service') {
                    sh 'mvn clean package -DskipTests'
                }
            }
        }

        stage('Unit Tests') {
            steps {
                // Execute unit tests using Maven
                dir('Backend/analyse-service') {
                    sh 'mvn test'
                }
            }
            post {
                always {
                    // Archive JUnit test reports
                    junit 'Backend/analyse-service/target/surefire-reports/*.xml'
                }
            }
        }
        /*
        stage('Integration Tests') {
            steps {
                // Execute integration tests (assuming you have a profile set up for them)
                dir('Backend/analyse-service') {
                    sh 'mvn verify -Pintegration-tests'
                }
            }
        }

        stage('Frontend Tests with Jest') {
            steps {
                dir('Frontend') {
                    // Run Jest tests for the frontend
                    sh 'npm install'
                    sh 'npm run test'
                }
            }
            post {
                always {
                    // Archive Jest test results or coverage reports if needed
                    archiveArtifacts artifacts: 'Frontend/coverage/**', allowEmptyArchive: true
                }
            }
        }

        stage('Performance Tests with JMeter') {
            steps {
                dir('PerformanceTests') {
                    // Run JMeter performance tests (replace with your JMeter test file path)
                    sh 'jmeter -n -t your_test_plan.jmx -l results.jtl'
                }
            }
            post {
                always {
                    // Archive JMeter test results
                    archiveArtifacts artifacts: 'PerformanceTests/results.jtl', allowEmptyArchive: true
                }
            }
        }

        stage('Automated E2E Tests with Selenium') {
            steps {
                dir('Frontend') {
                    // Run Selenium end-to-end tests (assuming npm script is set up for E2E testing)
                    sh 'npm install'
                    sh 'npm run e2e'
                }
            }
            post {
                always {
                    // Archive E2E test results
                    archiveArtifacts artifacts: 'Frontend/e2e/results/**', allowEmptyArchive: true
                }
            }
        }
    }
    */
    post {
        always {
            // Archive any JAR artifacts built during the build stage
            archiveArtifacts artifacts: 'Backend/analyse-service/target/*.jar', allowEmptyArchive: true
        }
        success {
            echo 'Build was successful!'
        }
        failure {
            echo 'Build failed! Check the logs for details.'
        }
    }
}
